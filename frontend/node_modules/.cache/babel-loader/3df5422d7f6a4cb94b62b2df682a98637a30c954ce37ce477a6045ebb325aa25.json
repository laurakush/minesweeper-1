{"ast":null,"code":"var _jsxFileName = \"/Users/laurakushnir/Documents/Minesweeper-TS/minesweeper-1/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { MineField } from './MineField';\nimport { Timer } from './Timer';\nimport { game } from '../gameLogic/game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Game difficulty presets\nconst DIFFICULTY = {\n  EASY: {\n    rows: 9,\n    cols: 9,\n    mines: 10\n  },\n  MEDIUM: {\n    rows: 16,\n    cols: 16,\n    mines: 40\n  },\n  HARD: {\n    rows: 16,\n    cols: 30,\n    mines: 99\n  }\n};\nconst Game = ({\n  initialRows,\n  initialCols,\n  initialMines\n}) => {\n  _s();\n  const [gameState, setGameState] = useState(game.newGame(initialRows, initialCols, initialMines));\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [flaggedCount, setFlaggedCount] = useState(0);\n  const [elapsedSeconds, setElapsedSeconds] = useState(0);\n  const [isCtrlPressed, setIsCtrlPressed] = useState(false);\n  const [rows, setRows] = useState(initialRows);\n  const [cols, setColumns] = useState(initialCols);\n  const [mines, setMines] = useState(initialMines);\n\n  // Handle keyboard events for Ctrl key\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Control') {\n        setIsCtrlPressed(true);\n      }\n    };\n    const handleKeyUp = e => {\n      if (e.key === 'Control') {\n        setIsCtrlPressed(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n\n  // Timer logic\n  useEffect(() => {\n    if (isCompleted || gameState.isOver) return;\n    const timerId = setInterval(() => {\n      setElapsedSeconds(prev => prev + 1);\n    }, 1000);\n    return () => clearInterval(timerId);\n  }, [isCompleted, gameState.isOver]);\n\n  // Check game status after each move\n  useEffect(() => {\n    const completed = game.isCompleted(gameState);\n    setIsCompleted(completed);\n    setFlaggedCount(game.countFlagged(gameState));\n  }, [gameState]);\n  const handleCellClick = useCallback(field => {\n    if (isCompleted || gameState.isOver) return;\n    if (isCtrlPressed) {\n      // Open cell\n      setGameState(prev => game.openMine(prev, field));\n    } else {\n      // Toggle flag\n      setGameState(prev => game.markMine(prev, field));\n    }\n  }, [isCtrlPressed, isCompleted, gameState.isOver]);\n  const startNewGame = useCallback(config => {\n    const {\n      rows: newRows,\n      cols: newCols,\n      mines: newMines\n    } = config;\n    setRows(newRows);\n    setColumns(newCols);\n    setMines(newMines);\n    setGameState(game.newGame(newRows, newCols, newMines));\n    setIsCompleted(false);\n    setFlaggedCount(0);\n    setElapsedSeconds(0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"level-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => startNewGame(DIFFICULTY.EASY),\n          children: \"Easy (9\\xD79, 10 mines)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => startNewGame(DIFFICULTY.MEDIUM),\n          children: \"Medium (16\\xD716, 40 mines)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => startNewGame(DIFFICULTY.HARD),\n          children: \"Hard (16\\xD730, 99 mines)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MineField, {\n      game: gameState,\n      onLeftClick: handleCellClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      secPassed: elapsedSeconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: [\"Completed: \", isCompleted ? 'YES' : 'NO', gameState.isOver && ' - Game Over!']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: [\"Flags: \", flaggedCount, \"/\", gameState.totBombs]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Left Click to mark possible mine or to explore fields around opened field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Ctrl + Left Click to open field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"rZGNf2qfPHy1q7E+jgPF6FskREs=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MineField","Timer","game","jsxDEV","_jsxDEV","DIFFICULTY","EASY","rows","cols","mines","MEDIUM","HARD","Game","initialRows","initialCols","initialMines","_s","gameState","setGameState","newGame","isCompleted","setIsCompleted","flaggedCount","setFlaggedCount","elapsedSeconds","setElapsedSeconds","isCtrlPressed","setIsCtrlPressed","setRows","setColumns","setMines","handleKeyDown","e","key","handleKeyUp","window","addEventListener","removeEventListener","isOver","timerId","setInterval","prev","clearInterval","completed","countFlagged","handleCellClick","field","openMine","markMine","startNewGame","config","newRows","newCols","newMines","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onLeftClick","secPassed","totBombs","_c","$RefreshReg$"],"sources":["/Users/laurakushnir/Documents/Minesweeper-TS/minesweeper-1/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { MineField } from './MineField';\nimport { Timer } from './Timer';\nimport { game } from '../gameLogic/game';\nimport { Game as GameType, Mine } from '../gameLogic/gameDomain';\n\ninterface GameProps {\n  initialRows: number;\n  initialCols: number;\n  initialMines: number;\n}\n\n// Game difficulty presets\nconst DIFFICULTY = {\n  EASY: { rows: 9, cols: 9, mines: 10 },\n  MEDIUM: { rows: 16, cols: 16, mines: 40 },\n  HARD: { rows: 16, cols: 30, mines: 99 }\n};\n\nconst Game: React.FC<GameProps> = ({ initialRows, initialCols, initialMines }) => {\n  const [gameState, setGameState] = useState<GameType>(\n    game.newGame(initialRows, initialCols, initialMines)\n  );\n  const [isCompleted, setIsCompleted] = useState<boolean>(false);\n  const [flaggedCount, setFlaggedCount] = useState<number>(0);\n  const [elapsedSeconds, setElapsedSeconds] = useState<number>(0);\n  const [isCtrlPressed, setIsCtrlPressed] = useState<boolean>(false);\n  const [rows, setRows] = useState<number>(initialRows);\n  const [cols, setColumns] = useState<number>(initialCols);\n  const [mines, setMines] = useState<number>(initialMines);\n\n  // Handle keyboard events for Ctrl key\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Control') {\n        setIsCtrlPressed(true);\n      }\n    };\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.key === 'Control') {\n        setIsCtrlPressed(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n\n  // Timer logic\n  useEffect(() => {\n    if (isCompleted || gameState.isOver) return;\n\n    const timerId = setInterval(() => {\n      setElapsedSeconds(prev => prev + 1);\n    }, 1000);\n\n    return () => clearInterval(timerId);\n  }, [isCompleted, gameState.isOver]);\n\n  // Check game status after each move\n  useEffect(() => {\n    const completed = game.isCompleted(gameState);\n    setIsCompleted(completed);\n    setFlaggedCount(game.countFlagged(gameState));\n  }, [gameState]);\n\n  const handleCellClick = useCallback((field: Mine) => {\n    if (isCompleted || gameState.isOver) return;\n\n    if (isCtrlPressed) {\n      // Open cell\n      setGameState(prev => game.openMine(prev, field));\n    } else {\n      // Toggle flag\n      setGameState(prev => game.markMine(prev, field));\n    }\n  }, [isCtrlPressed, isCompleted, gameState.isOver]);\n\n  const startNewGame = useCallback((config: { rows: number, cols: number, mines: number }) => {\n    const { rows: newRows, cols: newCols, mines: newMines } = config;\n    setRows(newRows);\n    setColumns(newCols);\n    setMines(newMines);\n    setGameState(game.newGame(newRows, newCols, newMines));\n    setIsCompleted(false);\n    setFlaggedCount(0);\n    setElapsedSeconds(0);\n  }, []);\n\n  return (\n    <div className=\"game\">\n      <div className=\"menu\">\n        <ul className=\"level-menu\">\n          <li onClick={() => startNewGame(DIFFICULTY.EASY)}>Easy (9×9, 10 mines)</li>\n          <li onClick={() => startNewGame(DIFFICULTY.MEDIUM)}>Medium (16×16, 40 mines)</li>\n          <li onClick={() => startNewGame(DIFFICULTY.HARD)}>Hard (16×30, 99 mines)</li>\n        </ul>\n      </div>\n      <MineField\n        game={gameState}\n        onLeftClick={handleCellClick}\n      />\n      <Timer secPassed={elapsedSeconds} />\n      <div className=\"status\">\n        Completed: {isCompleted ? 'YES' : 'NO'}\n        {gameState.isOver && ' - Game Over!'}\n      </div>\n      <div className=\"status\">Flags: {flaggedCount}/{gameState.totBombs}</div>\n      <div className=\"help\">\n        <h3>How to play</h3>\n        <ol>\n          <li>Left Click to mark possible mine or to explore fields around opened field</li>\n          <li>Ctrl + Left Click to open field</li>\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,IAAI,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzC;AACA,MAAMC,UAAU,GAAG;EACjBC,IAAI,EAAE;IAAEC,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC;EACrCC,MAAM,EAAE;IAAEH,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC;EACzCE,IAAI,EAAE;IAAEJ,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG;AACxC,CAAC;AAED,MAAMG,IAAyB,GAAGA,CAAC;EAAEC,WAAW;EAAEC,WAAW;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CACxCK,IAAI,CAACiB,OAAO,CAACN,WAAW,EAAEC,WAAW,EAAEC,YAAY,CACrD,CAAC;EACD,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAS,CAAC,CAAC;EAC3D,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAS,CAAC,CAAC;EAC/D,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAU,KAAK,CAAC;EAClE,MAAM,CAACU,IAAI,EAAEqB,OAAO,CAAC,GAAG/B,QAAQ,CAASgB,WAAW,CAAC;EACrD,MAAM,CAACL,IAAI,EAAEqB,UAAU,CAAC,GAAGhC,QAAQ,CAASiB,WAAW,CAAC;EACxD,MAAM,CAACL,KAAK,EAAEqB,QAAQ,CAAC,GAAGjC,QAAQ,CAASkB,YAAY,CAAC;;EAExD;EACAjB,SAAS,CAAC,MAAM;IACd,MAAMiC,aAAa,GAAIC,CAAgB,IAAK;MAC1C,IAAIA,CAAC,CAACC,GAAG,KAAK,SAAS,EAAE;QACvBN,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC;IAED,MAAMO,WAAW,GAAIF,CAAgB,IAAK;MACxC,IAAIA,CAAC,CAACC,GAAG,KAAK,SAAS,EAAE;QACvBN,gBAAgB,CAAC,KAAK,CAAC;MACzB;IACF,CAAC;IAEDQ,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,aAAa,CAAC;IACjDI,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEF,WAAW,CAAC;IAE7C,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,aAAa,CAAC;MACpDI,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEH,WAAW,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApC,SAAS,CAAC,MAAM;IACd,IAAIsB,WAAW,IAAIH,SAAS,CAACqB,MAAM,EAAE;IAErC,MAAMC,OAAO,GAAGC,WAAW,CAAC,MAAM;MAChCf,iBAAiB,CAACgB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IACrC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,OAAO,CAAC;EACrC,CAAC,EAAE,CAACnB,WAAW,EAAEH,SAAS,CAACqB,MAAM,CAAC,CAAC;;EAEnC;EACAxC,SAAS,CAAC,MAAM;IACd,MAAM6C,SAAS,GAAGzC,IAAI,CAACkB,WAAW,CAACH,SAAS,CAAC;IAC7CI,cAAc,CAACsB,SAAS,CAAC;IACzBpB,eAAe,CAACrB,IAAI,CAAC0C,YAAY,CAAC3B,SAAS,CAAC,CAAC;EAC/C,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAM4B,eAAe,GAAG9C,WAAW,CAAE+C,KAAW,IAAK;IACnD,IAAI1B,WAAW,IAAIH,SAAS,CAACqB,MAAM,EAAE;IAErC,IAAIZ,aAAa,EAAE;MACjB;MACAR,YAAY,CAACuB,IAAI,IAAIvC,IAAI,CAAC6C,QAAQ,CAACN,IAAI,EAAEK,KAAK,CAAC,CAAC;IAClD,CAAC,MAAM;MACL;MACA5B,YAAY,CAACuB,IAAI,IAAIvC,IAAI,CAAC8C,QAAQ,CAACP,IAAI,EAAEK,KAAK,CAAC,CAAC;IAClD;EACF,CAAC,EAAE,CAACpB,aAAa,EAAEN,WAAW,EAAEH,SAAS,CAACqB,MAAM,CAAC,CAAC;EAElD,MAAMW,YAAY,GAAGlD,WAAW,CAAEmD,MAAqD,IAAK;IAC1F,MAAM;MAAE3C,IAAI,EAAE4C,OAAO;MAAE3C,IAAI,EAAE4C,OAAO;MAAE3C,KAAK,EAAE4C;IAAS,CAAC,GAAGH,MAAM;IAChEtB,OAAO,CAACuB,OAAO,CAAC;IAChBtB,UAAU,CAACuB,OAAO,CAAC;IACnBtB,QAAQ,CAACuB,QAAQ,CAAC;IAClBnC,YAAY,CAAChB,IAAI,CAACiB,OAAO,CAACgC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC,CAAC;IACtDhC,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,CAAC,CAAC;IAClBE,iBAAiB,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IAAKkD,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBnD,OAAA;MAAKkD,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBnD,OAAA;QAAIkD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACxBnD,OAAA;UAAIoD,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC5C,UAAU,CAACC,IAAI,CAAE;UAAAiD,QAAA,EAAC;QAAoB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3ExD,OAAA;UAAIoD,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC5C,UAAU,CAACK,MAAM,CAAE;UAAA6C,QAAA,EAAC;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjFxD,OAAA;UAAIoD,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC5C,UAAU,CAACM,IAAI,CAAE;UAAA4C,QAAA,EAAC;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNxD,OAAA,CAACJ,SAAS;MACRE,IAAI,EAAEe,SAAU;MAChB4C,WAAW,EAAEhB;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFxD,OAAA,CAACH,KAAK;MAAC6D,SAAS,EAAEtC;IAAe;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCxD,OAAA;MAAKkD,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,aACX,EAACnC,WAAW,GAAG,KAAK,GAAG,IAAI,EACrCH,SAAS,CAACqB,MAAM,IAAI,eAAe;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNxD,OAAA;MAAKkD,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,SAAO,EAACjC,YAAY,EAAC,GAAC,EAACL,SAAS,CAAC8C,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxExD,OAAA;MAAKkD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBnD,OAAA;QAAAmD,QAAA,EAAI;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBxD,OAAA;QAAAmD,QAAA,gBACEnD,OAAA;UAAAmD,QAAA,EAAI;QAAyE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClFxD,OAAA;UAAAmD,QAAA,EAAI;QAA+B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAxGIJ,IAAyB;AAAAoD,EAAA,GAAzBpD,IAAyB;AA0G/B,eAAeA,IAAI;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}