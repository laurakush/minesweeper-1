{"ast":null,"code":"var _jsxFileName = \"/Users/laurakushnir/Documents/Minesweeper-TS/minesweeper-1/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { MineField } from './MineField';\nimport { game } from '../gameLogic/game';\nimport { time } from '../util/time';\nimport { GameControls, DIFFICULTY } from './GameControls';\nimport { GameHeader } from './GameHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  initialRows,\n  initialCols,\n  initialMines,\n  initialDifficulty\n}) => {\n  _s();\n  // Game state\n  const [gameState, setGameState] = useState(game.newGame(initialRows, initialCols, initialMines));\n  const [flaggedCount, setFlaggedCount] = useState(0);\n  const [elapsedSeconds, setElapsedSeconds] = useState(0);\n\n  // Configuration state\n  const [currentDifficulty, setCurrentDifficulty] = useState(initialDifficulty);\n\n  // Check if the game is over\n  const isGameOver = gameState.isOver;\n  const isGameWon = gameState.isWon;\n\n  // Timer logic\n  useEffect(() => {\n    if (isGameOver || isGameWon) return;\n    const timerId = setInterval(() => {\n      setElapsedSeconds(prev => prev + 1);\n    }, 1000);\n    return () => clearInterval(timerId);\n  }, [isGameOver, isGameWon]);\n\n  // Check game status after each move\n  useEffect(() => {\n    setFlaggedCount(game.countFlagged(gameState));\n\n    // If game is newly won, handle win condition\n    if (gameState.isWon) {\n      // Could play sound, etc.\n    }\n  }, [gameState]);\n\n  // Left click handler - reveal cell\n  const handleLeftClick = useCallback(field => {\n    if (isGameOver || isGameWon) return;\n    setGameState(prev => game.openMine(prev, field));\n  }, [isGameOver, isGameWon]);\n\n  // Right click handler - toggle flag\n  const handleRightClick = useCallback((field, e) => {\n    if (isGameOver || isGameWon) return;\n\n    // Prevent context menu from showing\n    e.preventDefault();\n    setGameState(prev => game.markMine(prev, field));\n  }, [isGameOver, isGameWon]);\n\n  // Start a new game with a specific difficulty\n  const startNewGame = useCallback(difficulty => {\n    const config = DIFFICULTY[difficulty];\n    const {\n      rows: newRows,\n      cols: newCols,\n      mines: newMines\n    } = config;\n    setCurrentDifficulty(difficulty);\n    setGameState(game.newGame(newRows, newCols, newMines));\n    setFlaggedCount(0);\n    setElapsedSeconds(0);\n  }, []);\n\n  // Reset the game with current difficulty\n  const resetGame = useCallback(() => {\n    startNewGame(currentDifficulty);\n  }, [currentDifficulty, startNewGame]);\n\n  // Format the time for display\n  const formattedTime = time.timer(elapsedSeconds);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      flagCount: flaggedCount,\n      totalBombs: gameState.totBombs,\n      elapsedTime: elapsedSeconds,\n      formattedTime: formattedTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(GameControls, {\n        currentDifficulty: currentDifficulty,\n        isGameOver: isGameOver || isGameWon,\n        onNewGame: startNewGame,\n        onReset: resetGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MineField, {\n        game: gameState,\n        onLeftClick: handleLeftClick,\n        onRightClick: handleRightClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), isGameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-message win-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF89 You Win! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Great job clearing the minefield!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-again-button\",\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), isGameOver && !isGameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-message lose-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCA3 Game Over! \\uD83D\\uDCA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You hit a mine! Better luck next time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-again-button\",\n          onClick: resetGame,\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"nrjr3bauk0m4XdyrRY23woUGumo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MineField","game","time","GameControls","DIFFICULTY","GameHeader","jsxDEV","_jsxDEV","Game","initialRows","initialCols","initialMines","initialDifficulty","_s","gameState","setGameState","newGame","flaggedCount","setFlaggedCount","elapsedSeconds","setElapsedSeconds","currentDifficulty","setCurrentDifficulty","isGameOver","isOver","isGameWon","isWon","timerId","setInterval","prev","clearInterval","countFlagged","handleLeftClick","field","openMine","handleRightClick","e","preventDefault","markMine","startNewGame","difficulty","config","rows","newRows","cols","newCols","mines","newMines","resetGame","formattedTime","timer","children","flagCount","totalBombs","totBombs","elapsedTime","fileName","_jsxFileName","lineNumber","columnNumber","className","onNewGame","onReset","onLeftClick","onRightClick","onClick","_c","$RefreshReg$"],"sources":["/Users/laurakushnir/Documents/Minesweeper-TS/minesweeper-1/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { MineField } from './MineField';\nimport { game } from '../gameLogic/game';\nimport { Game as GameType, Mine } from '../gameLogic/gameDomain';\nimport { time } from '../util/time';\nimport { GameControls, DifficultyLevel, DIFFICULTY } from './GameControls';\nimport { GameHeader } from './GameHeader';\n\ninterface GameProps {\n  initialRows: number;\n  initialCols: number;\n  initialMines: number;\n  initialDifficulty: DifficultyLevel;\n}\n\nconst Game: React.FC<GameProps> = ({ \n  initialRows, \n  initialCols, \n  initialMines,\n  initialDifficulty \n}) => {\n  // Game state\n  const [gameState, setGameState] = useState<GameType>(\n    game.newGame(initialRows, initialCols, initialMines)\n  );\n  const [flaggedCount, setFlaggedCount] = useState<number>(0);\n  const [elapsedSeconds, setElapsedSeconds] = useState<number>(0);\n  \n  // Configuration state\n  const [currentDifficulty, setCurrentDifficulty] = useState<DifficultyLevel>(initialDifficulty);\n\n  // Check if the game is over\n  const isGameOver = gameState.isOver;\n  const isGameWon = gameState.isWon;\n\n  // Timer logic\n  useEffect(() => {\n    if (isGameOver || isGameWon) return;\n\n    const timerId = setInterval(() => {\n      setElapsedSeconds(prev => prev + 1);\n    }, 1000);\n\n    return () => clearInterval(timerId);\n  }, [isGameOver, isGameWon]);\n\n  // Check game status after each move\n  useEffect(() => {\n    setFlaggedCount(game.countFlagged(gameState));\n    \n    // If game is newly won, handle win condition\n    if (gameState.isWon) {\n      // Could play sound, etc.\n    }\n  }, [gameState]);\n\n  // Left click handler - reveal cell\n  const handleLeftClick = useCallback((field: Mine) => {\n    if (isGameOver || isGameWon) return;\n    \n    setGameState(prev => game.openMine(prev, field));\n  }, [isGameOver, isGameWon]);\n\n  // Right click handler - toggle flag\n  const handleRightClick = useCallback((field: Mine, e: React.MouseEvent) => {\n    if (isGameOver || isGameWon) return;\n    \n    // Prevent context menu from showing\n    e.preventDefault();\n    \n    setGameState(prev => game.markMine(prev, field));\n  }, [isGameOver, isGameWon]);\n\n  // Start a new game with a specific difficulty\n  const startNewGame = useCallback((difficulty: DifficultyLevel) => {\n    const config = DIFFICULTY[difficulty];\n    const { rows: newRows, cols: newCols, mines: newMines } = config;\n    \n    setCurrentDifficulty(difficulty);\n    setGameState(game.newGame(newRows, newCols, newMines));\n    setFlaggedCount(0);\n    setElapsedSeconds(0);\n  }, []);\n\n  // Reset the game with current difficulty\n  const resetGame = useCallback(() => {\n    startNewGame(currentDifficulty);\n  }, [currentDifficulty, startNewGame]);\n\n  // Format the time for display\n  const formattedTime = time.timer(elapsedSeconds);\n\n  return (\n    <div>\n      <GameHeader\n        flagCount={flaggedCount}\n        totalBombs={gameState.totBombs}\n        elapsedTime={elapsedSeconds}\n        formattedTime={formattedTime}\n      />\n      \n      <div className=\"game\">\n        <GameControls\n          currentDifficulty={currentDifficulty}\n          isGameOver={isGameOver || isGameWon}\n          onNewGame={startNewGame}\n          onReset={resetGame}\n        />\n        \n        <MineField\n          game={gameState}\n          onLeftClick={handleLeftClick}\n          onRightClick={handleRightClick}\n        />\n\n        {/* Game Win/Lose Message */}\n        {isGameWon && (\n          <div className=\"game-message win-message\">\n            <h2>🎉 You Win! 🎉</h2>\n            <p>Great job clearing the minefield!</p>\n            <button className=\"play-again-button\" onClick={resetGame}>\n              Play Again\n            </button>\n          </div>\n        )}\n        \n        {isGameOver && !isGameWon && (\n          <div className=\"game-message lose-message\">\n            <h2>💣 Game Over! 💣</h2>\n            <p>You hit a mine! Better luck next time.</p>\n            <button className=\"play-again-button\" onClick={resetGame}>\n              Try Again\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}