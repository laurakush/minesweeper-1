{"ast":null,"code":"var _jsxFileName = \"/Users/laurakushnir/Documents/Minesweeper-TS/minesweeper-1/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { MineField } from './MineField';\nimport { game } from '../gameLogic/game';\nimport { time } from '../util/time';\nimport { GameControls, DIFFICULTY } from './GameControls';\nimport { GameStatus } from './GameStatus';\nimport { GameHeader } from './GameHeader';\nimport { HelpSection } from './HelpSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  initialRows,\n  initialCols,\n  initialMines,\n  initialDifficulty\n}) => {\n  _s();\n  // Game state\n  const [gameState, setGameState] = useState(game.newGame(initialRows, initialCols, initialMines));\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [flaggedCount, setFlaggedCount] = useState(0);\n  const [elapsedSeconds, setElapsedSeconds] = useState(0);\n\n  // Configuration state\n  const [currentDifficulty, setCurrentDifficulty] = useState(initialDifficulty);\n\n  // Timer logic\n  useEffect(() => {\n    if (isCompleted || gameState.isOver) return;\n    const timerId = setInterval(() => {\n      setElapsedSeconds(prev => prev + 1);\n    }, 1000);\n    return () => clearInterval(timerId);\n  }, [isCompleted, gameState.isOver]);\n\n  // Check game status after each move\n  useEffect(() => {\n    const completed = game.isCompleted(gameState);\n    setIsCompleted(completed);\n    setFlaggedCount(game.countFlagged(gameState));\n  }, [gameState]);\n\n  // Left click handler - reveal cell\n  const handleLeftClick = useCallback(field => {\n    if (isCompleted || gameState.isOver) return;\n    setGameState(prev => game.openMine(prev, field));\n  }, [isCompleted, gameState.isOver]);\n\n  // Right click handler - toggle flag\n  const handleRightClick = useCallback((field, e) => {\n    if (isCompleted || gameState.isOver) return;\n\n    // Prevent context menu from showing\n    e.preventDefault();\n    setGameState(prev => game.markMine(prev, field));\n  }, [isCompleted, gameState.isOver]);\n\n  // Start a new game with a specific difficulty\n  const startNewGame = useCallback(difficulty => {\n    const config = DIFFICULTY[difficulty];\n    const {\n      rows: newRows,\n      cols: newCols,\n      mines: newMines\n    } = config;\n    setCurrentDifficulty(difficulty);\n    setGameState(game.newGame(newRows, newCols, newMines));\n    setIsCompleted(false);\n    setFlaggedCount(0);\n    setElapsedSeconds(0);\n  }, []);\n\n  // Reset the game with current difficulty\n  const resetGame = useCallback(() => {\n    startNewGame(currentDifficulty);\n  }, [currentDifficulty, startNewGame]);\n\n  // Format the time for display\n  const formattedTime = time.timer(elapsedSeconds);\n\n  // Check if game is over (either won or lost)\n  const isGameOver = isCompleted || gameState.isOver;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      flagCount: flaggedCount,\n      totalBombs: gameState.totBombs,\n      elapsedTime: elapsedSeconds,\n      formattedTime: formattedTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(GameControls, {\n        currentDifficulty: currentDifficulty,\n        isGameOver: isGameOver,\n        onNewGame: startNewGame,\n        onReset: resetGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MineField, {\n        game: gameState,\n        onLeftClick: handleLeftClick,\n        onRightClick: handleRightClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameStatus, {\n        isCompleted: isCompleted,\n        isOver: gameState.isOver\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HelpSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"YnEYd6a1tx9UigmoRrTnv5cBpLo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MineField","game","time","GameControls","DIFFICULTY","GameStatus","GameHeader","HelpSection","jsxDEV","_jsxDEV","Game","initialRows","initialCols","initialMines","initialDifficulty","_s","gameState","setGameState","newGame","isCompleted","setIsCompleted","flaggedCount","setFlaggedCount","elapsedSeconds","setElapsedSeconds","currentDifficulty","setCurrentDifficulty","isOver","timerId","setInterval","prev","clearInterval","completed","countFlagged","handleLeftClick","field","openMine","handleRightClick","e","preventDefault","markMine","startNewGame","difficulty","config","rows","newRows","cols","newCols","mines","newMines","resetGame","formattedTime","timer","isGameOver","children","flagCount","totalBombs","totBombs","elapsedTime","fileName","_jsxFileName","lineNumber","columnNumber","className","onNewGame","onReset","onLeftClick","onRightClick","_c","$RefreshReg$"],"sources":["/Users/laurakushnir/Documents/Minesweeper-TS/minesweeper-1/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { MineField } from './MineField';\nimport { game } from '../gameLogic/game';\nimport { Game as GameType, Mine } from '../gameLogic/gameDomain';\nimport { time } from '../util/time';\nimport { GameControls, DifficultyLevel, DIFFICULTY } from './GameControls';\nimport { GameStatus } from './GameStatus';\nimport { GameHeader } from './GameHeader';\nimport { HelpSection } from './HelpSection';\n\ninterface GameProps {\n  initialRows: number;\n  initialCols: number;\n  initialMines: number;\n  initialDifficulty: DifficultyLevel;\n}\n\nconst Game: React.FC<GameProps> = ({ \n  initialRows, \n  initialCols, \n  initialMines,\n  initialDifficulty \n}) => {\n  // Game state\n  const [gameState, setGameState] = useState<GameType>(\n    game.newGame(initialRows, initialCols, initialMines)\n  );\n  const [isCompleted, setIsCompleted] = useState<boolean>(false);\n  const [flaggedCount, setFlaggedCount] = useState<number>(0);\n  const [elapsedSeconds, setElapsedSeconds] = useState<number>(0);\n  \n  // Configuration state\n  const [currentDifficulty, setCurrentDifficulty] = useState<DifficultyLevel>(initialDifficulty);\n\n  // Timer logic\n  useEffect(() => {\n    if (isCompleted || gameState.isOver) return;\n\n    const timerId = setInterval(() => {\n      setElapsedSeconds(prev => prev + 1);\n    }, 1000);\n\n    return () => clearInterval(timerId);\n  }, [isCompleted, gameState.isOver]);\n\n  // Check game status after each move\n  useEffect(() => {\n    const completed = game.isCompleted(gameState);\n    setIsCompleted(completed);\n    setFlaggedCount(game.countFlagged(gameState));\n  }, [gameState]);\n\n  // Left click handler - reveal cell\n  const handleLeftClick = useCallback((field: Mine) => {\n    if (isCompleted || gameState.isOver) return;\n    \n    setGameState(prev => game.openMine(prev, field));\n  }, [isCompleted, gameState.isOver]);\n\n  // Right click handler - toggle flag\n  const handleRightClick = useCallback((field: Mine, e: React.MouseEvent) => {\n    if (isCompleted || gameState.isOver) return;\n    \n    // Prevent context menu from showing\n    e.preventDefault();\n    \n    setGameState(prev => game.markMine(prev, field));\n  }, [isCompleted, gameState.isOver]);\n\n  // Start a new game with a specific difficulty\n  const startNewGame = useCallback((difficulty: DifficultyLevel) => {\n    const config = DIFFICULTY[difficulty];\n    const { rows: newRows, cols: newCols, mines: newMines } = config;\n    \n    setCurrentDifficulty(difficulty);\n    setGameState(game.newGame(newRows, newCols, newMines));\n    setIsCompleted(false);\n    setFlaggedCount(0);\n    setElapsedSeconds(0);\n  }, []);\n\n  // Reset the game with current difficulty\n  const resetGame = useCallback(() => {\n    startNewGame(currentDifficulty);\n  }, [currentDifficulty, startNewGame]);\n\n  // Format the time for display\n  const formattedTime = time.timer(elapsedSeconds);\n  \n  // Check if game is over (either won or lost)\n  const isGameOver = isCompleted || gameState.isOver;\n\n  return (\n    <div>\n      <GameHeader\n        flagCount={flaggedCount}\n        totalBombs={gameState.totBombs}\n        elapsedTime={elapsedSeconds}\n        formattedTime={formattedTime}\n      />\n      \n      <div className=\"game\">\n        <GameControls\n          currentDifficulty={currentDifficulty}\n          isGameOver={isGameOver}\n          onNewGame={startNewGame}\n          onReset={resetGame}\n        />\n        \n        <MineField\n          game={gameState}\n          onLeftClick={handleLeftClick}\n          onRightClick={handleRightClick}\n        />\n        \n        <GameStatus \n          isCompleted={isCompleted} \n          isOver={gameState.isOver} \n        />\n        \n        <HelpSection />\n      </div>\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}