{"ast":null,"code":"var _jsxFileName = \"/Users/laurakushnir/Documents/Minesweeper-TS/minesweeper-1/frontend/src/components/MineCell.tsx\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// This function renders the mine cell based on the state of the mine \nconst renderMine = field => {\n  if (field.isOpened) {\n    if (field.bombs > 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `bombs-${field.bombs}`,\n        children: field.bombs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this);\n    } else if (field.bombs === 0) {\n      return '';\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bomb\",\n        children: \"\\uD83D\\uDCA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    }\n  } else {\n    if (field.isFlagged) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flag\",\n        children: \"\\uD83D\\uDEA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n    } else {\n      return '';\n    }\n  }\n};\nexport const MineCell = ({\n  field,\n  index,\n  onLeftClick,\n  onRightClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `mine-button${field.isOpened ? ' mine-opened' : ''}`,\n    tabIndex: index,\n    onClick: () => onLeftClick(field),\n    onContextMenu: e => onRightClick(field, e),\n    children: renderMine(field)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c = MineCell;\nvar _c;\n$RefreshReg$(_c, \"MineCell\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","renderMine","field","isOpened","bombs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isFlagged","MineCell","index","onLeftClick","onRightClick","tabIndex","onClick","onContextMenu","e","_c","$RefreshReg$"],"sources":["/Users/laurakushnir/Documents/Minesweeper-TS/minesweeper-1/frontend/src/components/MineCell.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Mine } from '../gameLogic/gameDomain';\n\nexport interface MineProps {\n    index: number;\n    field: Mine;\n    onLeftClick: (field: Mine) => void;\n    onRightClick: (field: Mine, e: React.MouseEvent) => void;\n}\n\n// This function renders the mine cell based on the state of the mine \nconst renderMine = (field: Mine) => {\n    if (field.isOpened) {\n        if (field.bombs > 0) {\n            return (<span className={`bombs-${field.bombs}`}>{field.bombs}</span>);\n        }\n        else if (field.bombs === 0) {\n            return '';\n        }\n        else {\n            return (<span className=\"bomb\">ðŸ’£</span>);\n        }\n    } else {\n        if (field.isFlagged) {\n            return (<span className=\"flag\">ðŸš©</span>);\n        }\n        else {\n            return ''; \n        }\n    }\n};\n\nexport const MineCell: React.FC<MineProps> = ({ field, index, onLeftClick, onRightClick }) => {\n    return (\n        <button \n            className={`mine-button${field.isOpened ? ' mine-opened' : ''}`}\n            tabIndex={index}\n            onClick={() => onLeftClick(field)}\n            onContextMenu={(e) => onRightClick(field, e)}>\n            {renderMine(field)}\n        </button>\n    );\n};"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/B;AACA,MAAMC,UAAU,GAAIC,KAAW,IAAK;EAChC,IAAIA,KAAK,CAACC,QAAQ,EAAE;IAChB,IAAID,KAAK,CAACE,KAAK,GAAG,CAAC,EAAE;MACjB,oBAAQJ,OAAA;QAAMK,SAAS,EAAE,SAASH,KAAK,CAACE,KAAK,EAAG;QAAAE,QAAA,EAAEJ,KAAK,CAACE;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IACzE,CAAC,MACI,IAAIR,KAAK,CAACE,KAAK,KAAK,CAAC,EAAE;MACxB,OAAO,EAAE;IACb,CAAC,MACI;MACD,oBAAQJ,OAAA;QAAMK,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAC5C;EACJ,CAAC,MAAM;IACH,IAAIR,KAAK,CAACS,SAAS,EAAE;MACjB,oBAAQX,OAAA;QAAMK,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAC5C,CAAC,MACI;MACD,OAAO,EAAE;IACb;EACJ;AACJ,CAAC;AAED,OAAO,MAAME,QAA6B,GAAGA,CAAC;EAAEV,KAAK;EAAEW,KAAK;EAAEC,WAAW;EAAEC;AAAa,CAAC,KAAK;EAC1F,oBACIf,OAAA;IACIK,SAAS,EAAE,cAAcH,KAAK,CAACC,QAAQ,GAAG,cAAc,GAAG,EAAE,EAAG;IAChEa,QAAQ,EAAEH,KAAM;IAChBI,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAACZ,KAAK,CAAE;IAClCgB,aAAa,EAAGC,CAAC,IAAKJ,YAAY,CAACb,KAAK,EAAEiB,CAAC,CAAE;IAAAb,QAAA,EAC5CL,UAAU,CAACC,KAAK;EAAC;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEjB,CAAC;AAACU,EAAA,GAVWR,QAA6B;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}